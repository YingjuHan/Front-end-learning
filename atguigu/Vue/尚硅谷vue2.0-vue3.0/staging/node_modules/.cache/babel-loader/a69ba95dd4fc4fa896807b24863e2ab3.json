{"remainingRequest":"E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\node_modules\\babel-loader\\lib\\index.js!E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\src\\App.vue","mtime":1658592611866},{"path":"E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658581467218},{"path":"E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\node_modules\\babel-loader\\lib\\index.js","mtime":1658581468784},{"path":"E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1658581467218},{"path":"E:\\Front-end-learning\\atguigu\\Vue\\尚硅谷vue2.0-vue3.0\\staging\\node_modules\\vue-loader\\lib\\index.js","mtime":1658581469744}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IERlbW8gZnJvbSAnLi9jb21wb25lbnRzL0RlbW8nOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czogewogICAgRGVtbzogRGVtbwogIH0sCiAgbWV0aG9kczogewogICAgdGVzdDogZnVuY3Rpb24gdGVzdCh4LCB5LCB6KSB7CiAgICAgIGNvbnNvbGUubG9nKCfmlLbliLDkuobmlbDmja7vvJonLCB4LCB5LCB6KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRyZWZzLmRlbW8uJG9uKCdoYWhhJywgdGhpcy50ZXN0KTsKICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,OAAA,IAAA,MAAA,mBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AAAA,IAAA,IAAA,EAAA;AAAA,GAFA;AAGA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,CADA,EACA,CADA,EACA,CADA,EACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AACA;AAHA,GAHA;AAQA,EAAA,OARA,qBAQA;AACA,SAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,MAAA,EAAA,KAAA,IAAA;AACA;AAVA,CAAA","sourcesContent":["<template>\n  <div class=\"app\">\n    <h2>我是App组件</h2>\n    <!--\n        如下代码是给Demo的组件实例对象定义了一个haha事件，\n        只要Demo组件实例对象触发了haha事件，那么就会调用test函数\n    -->\n\n    <!-- 自定义事件的第一种方式：给Demo组件实例绑定一个自定义事件：haha -->\n    <!-- <Demo @haha=\"test\"/> -->\n\n    <!-- 自定义事件的第二种方式：给Demo组件实例绑定一个自定义事件：haha -->\n    <Demo ref=\"demo\"/>\n\n  </div>\n</template>\n\n<script>\nimport Demo from './components/Demo';\n\nexport default {\n  name: 'App',\n  components: { Demo },\n  methods: {\n    test(x, y, z) {\n      console.log('收到了数据：', x, y, z);\n    }\n  },\n  mounted() {\n    this.$refs.demo.$on('haha', this.test);\n  },\n};\n\n</script>\n\n<style>\n.app {\n  background-color: gray;\n  padding: 10px;\n}\n</style>\n<!-- 08_src_自定义事件 -->"],"sourceRoot":"src"}]}